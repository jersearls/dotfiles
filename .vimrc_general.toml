hook_add = '''
function! JSONFormat()
  execute "%!python -m json.tool"
endfunction
'''

[[plugins]]
repo = 'benekastah/neomake'
hook_add = '''
autocmd! BufWritePost * Neomake
autocmd! BufRead * Neomake
let g:neomake_echo_current_error=1
let g:neomake_open_list=1

nmap <Leader>mc :lclose<CR>
nmap <Leader>mo :lopen<CR>
nmap <Leader>mn :lnext<CR>
nmap <Leader>mp :lprev<CR>
'''

[[plugins]]
repo = 'fntlnz/atags.vim'
hook_add = '''
" Skip tagging files ignored by ag and git
let g:atags_build_commands_list = [
    \ 'ag -g "" | ctags -L - --fields=+l -f tags.tmp',
    \ 'awk "length($0) < 400" tags.tmp > tags',
    \ 'rm tags.tmp'
    \ ]
" Tag when writing files
autocmd BufWritePost * call atags#generate()
map <Leader>g :call atags#generate()<cr>

" tags
" Show tags in vertical split
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>
" Show tags in tab
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
" Show tags in horizontal split
map <A-\> :split <CR>:exec("tag ".expand("<cword>"))<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_start_length = 3
let g:deoplete#enable_smart_case = 1
set completeopt=preview,noselect
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_user_command = 'rg --files --hidden  %s'
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
let g:ctrlp_use_caching = 0
let g:ctrlp_show_hidden = 1
'''

[[plugins]]
repo = 'fisadev/vim-ctrlp-cmdpalette'
depends = 'ctrlpvim/ctrlp.vim'
hook_add = '''
map <M-Space> :CtrlPCmdPalette<CR>
'''

[[plugins]]
repo = 'rking/ag.vim'
hook_add = '''
let g:ag_working_path_mode="r"    " Search from project root
let g:ag_prg="rg --vimgrep"
'''

[[plugins]]
repo = 'Chun-Yang/vim-action-ag'
depends = 'rking/ag.vim'
hook_add = '''
" use * to search current word in normal mode
nmap <Leader>* <Plug>AgActionWord
" use * to search selected text in visual mode
vmap <Leader>* <Plug>AgActionVisual
'''

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
let g:rooter_change_directory_for_non_project_files = 'current'
'''

[[plugins]]
repo = 'godlygeek/tabular'
hook_add = '''
vmap a= :Tabularize /=<CR>
vmap a; :Tabularize /::<CR>
vmap a- :Tabularize /-><CR>
'''

[[plugins]]
repo = 'MarcWeber/vim-addon-local-vimrc'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'vim-scripts/tComment'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <Leader>gb :Gblame <CR>
nnoremap <Leader>gd :Gdiff <CR>
nnoremap <Leader>gs :Gstatus <CR>
nnoremap <Leader>gh :Gstatus <CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_max_signs = 1000
let g:gitgutter_highlight_lines = 0
nnoremap <Leader>gha :GitGutterStageHunk <CR>
nnoremap <Leader>ghr :GitGutterUndoHunk <CR>
nnoremap <Leader>ghp :GitGutterPreviewHunk <CR>
nnoremap <Leader>ghh :GitGutterLineHighlightsToggle <CR>
'''

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'tpope/vim-eunuch'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
nnoremap <Leader>us :GundoShow <CR>
nnoremap <Leader>uh :GundoHide <CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = '''
make
'''
