hook_add = '''
function! JSONFormat()
  execute "%!python -m json.tool"
endfunction

set clipboard=unnamed

" execute a command and show it's output in a split window
command! -nargs=* -complete=shellcmd Rsplit execute "new | r! <args>"
command! -nargs=* -complete=shellcmd Rvsplit execute "vnew | r! <args>"

" execute a command and show it's output in a new tab
command! -nargs=* -complete=shellcmd Rtab execute "tabnew | r! <args>"

" Allow project specific .vimrc files
set exrc
set secure
'''

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'xolox/vim-easytags'
build = '''
brew install ctags
'''
hook_add = '''
let g:easytags_async=1
" Show tags in vertical split
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>
" Show tags in tab
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
" Show tags in horizontal split
map <A-\> :split <CR>:exec("tag ".expand("<cword>"))<CR>
'''

[[plugins]]
repo = 'Valloric/YouCompleteMe'
build = '''
npm install -g tern typescript
./install.py --all
'''
hook_add = '''
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_min_num_of_chars_for_completion = 1
'''

[[plugins]]
repo = 'junegunn/fzf'
build = '''
./install -all
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore-dir .git --ignore-dir node_modules --ignore tags -g ""'
let g:fzf_buffers_jump = 1
let g:fzf_history_dir = '~/.local/share/fzf-history'
map <C-p> :FZF<CR>
nmap <C-a> :Commands<CR>
nmap <C-c> :Commits<CR>
nnoremap <silent> <Leader>* :Ag <C-R><C-W><CR>
nnoremap <silent> <Leader>ag :Ag<CR>
'''

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
let g:rooter_change_directory_for_non_project_files = 'current'
'''

[[plugins]]
repo = 'godlygeek/tabular'
hook_add = '''
vmap a= :Tabularize /=<CR>
vmap a; :Tabularize /::<CR>
vmap a- :Tabularize /-><CR>
'''

[[plugins]]
repo = 'MarcWeber/vim-addon-local-vimrc'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'vim-scripts/tComment'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <Leader>gb :Gblame <CR>
nnoremap <Leader>gd :Gdiff <CR>
nnoremap <Leader>gs :Gstatus <CR>
nnoremap <Leader>gh :Gstatus <CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_max_signs = 1000
let g:gitgutter_highlight_lines = 0
nnoremap <Leader>gha :GitGutterStageHunk <CR>
nnoremap <Leader>ghr :GitGutterUndoHunk <CR>
nnoremap <Leader>ghp :GitGutterPreviewHunk <CR>
nnoremap <Leader>ghh :GitGutterLineHighlightsToggle <CR>
'''

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'tpope/vim-eunuch'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
nnoremap <Leader>us :GundoShow <CR>
nnoremap <Leader>uh :GundoHide <CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = '''
make
'''

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'romainl/vim-qf'
hook_source = '''
let g:qf_loclist_window_bottom=0
let g:qf_auto_open_quickfix=0
'''

[[plugins]]
repo = 'tpope/vim-dispatch'
hook_source = '''
let g:dispatch_tmux_height=20
nnoremap <Leader>dd :Dispatch <CR>
nnoremap <Leader>dD :Dispatch 
nnoremap <Leader>df :FocusDispatch 
'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'
