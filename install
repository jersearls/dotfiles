#! /bin/bash

#OSX Command line tools
xcode-select --install

# JENV
git clone https://github.com/gcuisinier/jenv.git ~/.jenv

# Checkout dotfiles
if [ ! -d ~/code/dotfiles ]
then
	echo
	echo "Cloning dotfiles repository"
  mkdir -p ~/code
  git clone git@github.com:samlawrencejones/dotfiles.git ~/code/dotfiles || echo "Generate/Upload SSH Key To Github: https://help.github.com/articles/generating-ssh-keys/"
else
	echo
	echo "Updating dotfiles repository"
	cd ~/code/dotfiles
	git pull
fi


# Install Homebrew
if ! which brew >/dev/null
then
	echo
	echo "Installing Homebrew"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
	echo
	echo "Updating Homebrew"
  brew update
fi

# Install Homebrew tools
echo
echo "Installing wget"
brew install wget
echo
echo "Installing git"
brew install git
echo
echo "Installing vim"
brew install vim
echo
echo "Installing neo vim"
brew insatll nvim
sudo pip2 install neovim
echo
echo "Installing zsh"
brew install zsh
echo
echo "Installing heroku toolbelt"
brew install heroku-toolbelt
echo
echo "Installing brew-cask"
brew install caskroom/cask/brew-cask
echo
echo "Installing silver searcher"
brew install the_silver_searcher
echo
echo "Installing tmux"
brew install tmux
echo
echo "Installing cmake"
brew install cmake
echo
echo "Installing ctags"
brew install ctags
echo
echo "Installing tree"
brew install tree
echo
echo "Installing emacs"
brew install tree

# Install applications
echo
read -p "Install brew cask applications? " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
  brew cask install google-chrome
  brew cask install firefox
  brew cask install hipchat
  brew cask install gitter
  brew cask install slack
  brew cask install evernote
  brew cask install atom
  brew cask install alfred
  brew cask install seil
  brew cask install bettertouchtool
  brew cask install iterm2
  brew cask install evernote
  brew cask install the-unarchiver
  brew cask install skitch
  brew cask install dropbox
  open -a Dropbox
fi


# Install Oh My Zsh
cd ~
if [ ! -d ~/.oh-my-zsh ]
then
	echo
	echo "Installing Oh My Zsh"
  sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
  zsh
else
	echo
	echo "Skipping Oh My Zsh install"
fi


# Update tmux conf
cd ~
if [ -f .tmux.conf ]
then
	echo
	echo "backing up .tmux.conf"
	mv .vimrc .bk.tmux.conf.$(date +%s)
fi
ln -s ~/code/dotfiles/.tmux.conf .

# Update .pryrc
cd ~
if [ -f .pryrc ]
then
	echo
	echo "backing up .pryrc"
	mv .vimrc .bk.pryrc.$(date +%s)
fi
ln -s ~/code/dotfiles/.pryrc .


# Install vundle
if [ ! -d  ~/.vim/bundle/Vundle.vim ]
then
	echo
	echo "Installing Vundle"
	git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
else
  echo "Skipping Vundle install"
fi
vim +PluginInstall +qall +PluginClean

# Update vimrc
cd ~
if [ -f .vimrc ]
then
	echo
	echo "backing up .vimrc"
	mv .vimrc .bk.vimrc.$(date +%s)
fi
ln -s ~/code/dotfiles/.vimrc .
vim +PluginInstall +qall +PluginClean

# Install vim plugin extras
~/.vim/bundle/YouCompleteMe/install.py --tern-completer

# Update git files
cd ~
if [ -f .gitconfig ]
then
	echo
	echo "backing up .gitconfig "
	mv .gitconfig .bk.gitconfig$(date +%s)
fi
ln -s ~/code/dotfiles/.gitconfig .
cd ~
if [ -f .gitignore_global ]
then
	echo
	echo "backing up .gitignore_global "
	mv .gitignore_global .bk.gitignore_global.$(date +%s)
fi
ln -s ~/code/dotfiles/.gitignore_global .

# Updating custom vim docs
cd ~
if [ ! -d ~/.vim/doc ]
then
  cd ~/.vim
  mkdir doc
  cd doc
  ln -s ~/code/dotfiles/mytips.txt .
  cd ~
fi

# Update emacs
cd ~
if [ -f .emacs ]
then
	echo
	echo "backing up .emacs"
	mv .emacs .bk.emacs.$(date +%s)
fi
ln -s ~/code/dotfiles/.emacs .

# Update ctags
cd ~
if [ -f .ctags ]
then
	echo
	echo "backing up .ctags"
	mv .ctags .bk.ctags.$(date +%s)
fi
ln -s ~/code/dotfiles/.ctags .

# Install RVM
if ! which rvm >/dev/null
then
	echo
	echo "Installing RVM"
  curl -L https://get.rvm.io | bash -s stable --ruby
  source ~/.zshrc
  rvm install 2.3
  rvm use 2.3 --default
  gem install pry pry-nav pry-stack_explorer pro-doc bundler
else
	echo
  echo "Skipping RVM install"
fi

# Install Elixir Stuff
if ! which kiex >/dev/null
then
  curl -sSL https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
  source ~/.zshrc
  kiex install 1.2.5
  kiex use 1.2.5 --default
fi

# Install NPM
if ! which nvm >/dev/null
then
	curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash
	source ~/.zshrc
	nvm install stable
  nvm use stable
  npm install -g eslint jshint
fi

# Install GVM
if ! which gvm >/dev/null
then
	zsh < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
	gvm install go1.6
	gvm use go1.6 --default
fi

# Install Haskell stuff
echo
echo "Install haskell platform"
brew cask install haskell-platform
echo
echo "Install haskell stack"
brew install haskell-stack

# Update .zshrc
cd ~
if [ -f .zshrc ]
then
	echo
	echo "backing up .zshrc"
	mv .zshrc .bk.zshrc.$(date +%s)
fi
ln -s ~/code/dotfiles/.zshrc .

# # SSH setup
# mkdir -p ~/.ssh
# cd ~/.ssh
# if [ -f config ]
# then
# 	echo
# 	echo "Backing up ssh config"
# 	mv config .bk.config.$(date +%s)
# fi
# ln -s ~/Dropbox/ssh/config .


echo
echo "Install Complete"

